/*
Delphix API Gateway

Delphix API Gateway API

API version: 1.0
Contact: support@delphix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ProvisionVDBResponse struct for ProvisionVDBResponse
type ProvisionVDBResponse struct {
	// The ID of the provisioning job.
	JobId *string `json:"job_id,omitempty"`
	Vdb *VDB `json:"vdb,omitempty"`
}

// NewProvisionVDBResponse instantiates a new ProvisionVDBResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProvisionVDBResponse() *ProvisionVDBResponse {
	this := ProvisionVDBResponse{}
	return &this
}

// NewProvisionVDBResponseWithDefaults instantiates a new ProvisionVDBResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProvisionVDBResponseWithDefaults() *ProvisionVDBResponse {
	this := ProvisionVDBResponse{}
	return &this
}

// GetJobId returns the JobId field value if set, zero value otherwise.
func (o *ProvisionVDBResponse) GetJobId() string {
	if o == nil || o.JobId == nil {
		var ret string
		return ret
	}
	return *o.JobId
}

// GetJobIdOk returns a tuple with the JobId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisionVDBResponse) GetJobIdOk() (*string, bool) {
	if o == nil || o.JobId == nil {
		return nil, false
	}
	return o.JobId, true
}

// HasJobId returns a boolean if a field has been set.
func (o *ProvisionVDBResponse) HasJobId() bool {
	if o != nil && o.JobId != nil {
		return true
	}

	return false
}

// SetJobId gets a reference to the given string and assigns it to the JobId field.
func (o *ProvisionVDBResponse) SetJobId(v string) {
	o.JobId = &v
}

// GetVdb returns the Vdb field value if set, zero value otherwise.
func (o *ProvisionVDBResponse) GetVdb() VDB {
	if o == nil || o.Vdb == nil {
		var ret VDB
		return ret
	}
	return *o.Vdb
}

// GetVdbOk returns a tuple with the Vdb field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisionVDBResponse) GetVdbOk() (*VDB, bool) {
	if o == nil || o.Vdb == nil {
		return nil, false
	}
	return o.Vdb, true
}

// HasVdb returns a boolean if a field has been set.
func (o *ProvisionVDBResponse) HasVdb() bool {
	if o != nil && o.Vdb != nil {
		return true
	}

	return false
}

// SetVdb gets a reference to the given VDB and assigns it to the Vdb field.
func (o *ProvisionVDBResponse) SetVdb(v VDB) {
	o.Vdb = &v
}

func (o ProvisionVDBResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.JobId != nil {
		toSerialize["job_id"] = o.JobId
	}
	if o.Vdb != nil {
		toSerialize["vdb"] = o.Vdb
	}
	return json.Marshal(toSerialize)
}

type NullableProvisionVDBResponse struct {
	value *ProvisionVDBResponse
	isSet bool
}

func (v NullableProvisionVDBResponse) Get() *ProvisionVDBResponse {
	return v.value
}

func (v *NullableProvisionVDBResponse) Set(val *ProvisionVDBResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableProvisionVDBResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableProvisionVDBResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProvisionVDBResponse(val *ProvisionVDBResponse) *NullableProvisionVDBResponse {
	return &NullableProvisionVDBResponse{value: val, isSet: true}
}

func (v NullableProvisionVDBResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProvisionVDBResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


