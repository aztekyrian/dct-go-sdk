/*
Delphix API Gateway

Delphix API Gateway API

API version: 1.0
Contact: support@delphix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CreateBookmarkResponse struct for CreateBookmarkResponse
type CreateBookmarkResponse struct {
	Bookmark *Bookmark `json:"bookmark,omitempty"`
	// The initiated job id.
	JobId *string `json:"job_id,omitempty"`
}

// NewCreateBookmarkResponse instantiates a new CreateBookmarkResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateBookmarkResponse() *CreateBookmarkResponse {
	this := CreateBookmarkResponse{}
	return &this
}

// NewCreateBookmarkResponseWithDefaults instantiates a new CreateBookmarkResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateBookmarkResponseWithDefaults() *CreateBookmarkResponse {
	this := CreateBookmarkResponse{}
	return &this
}

// GetBookmark returns the Bookmark field value if set, zero value otherwise.
func (o *CreateBookmarkResponse) GetBookmark() Bookmark {
	if o == nil || o.Bookmark == nil {
		var ret Bookmark
		return ret
	}
	return *o.Bookmark
}

// GetBookmarkOk returns a tuple with the Bookmark field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBookmarkResponse) GetBookmarkOk() (*Bookmark, bool) {
	if o == nil || o.Bookmark == nil {
		return nil, false
	}
	return o.Bookmark, true
}

// HasBookmark returns a boolean if a field has been set.
func (o *CreateBookmarkResponse) HasBookmark() bool {
	if o != nil && o.Bookmark != nil {
		return true
	}

	return false
}

// SetBookmark gets a reference to the given Bookmark and assigns it to the Bookmark field.
func (o *CreateBookmarkResponse) SetBookmark(v Bookmark) {
	o.Bookmark = &v
}

// GetJobId returns the JobId field value if set, zero value otherwise.
func (o *CreateBookmarkResponse) GetJobId() string {
	if o == nil || o.JobId == nil {
		var ret string
		return ret
	}
	return *o.JobId
}

// GetJobIdOk returns a tuple with the JobId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBookmarkResponse) GetJobIdOk() (*string, bool) {
	if o == nil || o.JobId == nil {
		return nil, false
	}
	return o.JobId, true
}

// HasJobId returns a boolean if a field has been set.
func (o *CreateBookmarkResponse) HasJobId() bool {
	if o != nil && o.JobId != nil {
		return true
	}

	return false
}

// SetJobId gets a reference to the given string and assigns it to the JobId field.
func (o *CreateBookmarkResponse) SetJobId(v string) {
	o.JobId = &v
}

func (o CreateBookmarkResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Bookmark != nil {
		toSerialize["bookmark"] = o.Bookmark
	}
	if o.JobId != nil {
		toSerialize["job_id"] = o.JobId
	}
	return json.Marshal(toSerialize)
}

type NullableCreateBookmarkResponse struct {
	value *CreateBookmarkResponse
	isSet bool
}

func (v NullableCreateBookmarkResponse) Get() *CreateBookmarkResponse {
	return v.value
}

func (v *NullableCreateBookmarkResponse) Set(val *CreateBookmarkResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateBookmarkResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateBookmarkResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateBookmarkResponse(val *CreateBookmarkResponse) *NullableCreateBookmarkResponse {
	return &NullableCreateBookmarkResponse{value: val, isSet: true}
}

func (v NullableCreateBookmarkResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateBookmarkResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


