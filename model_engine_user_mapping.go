/*
Delphix API Gateway

Delphix API Gateway API

API version: 1.0
Contact: support@delphix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// EngineUserMapping struct for EngineUserMapping
type EngineUserMapping struct {
	EngineId int64 `json:"engine_id"`
	EngineUserId int64 `json:"engine_user_id"`
}

// NewEngineUserMapping instantiates a new EngineUserMapping object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEngineUserMapping(engineId int64, engineUserId int64) *EngineUserMapping {
	this := EngineUserMapping{}
	this.EngineId = engineId
	this.EngineUserId = engineUserId
	return &this
}

// NewEngineUserMappingWithDefaults instantiates a new EngineUserMapping object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEngineUserMappingWithDefaults() *EngineUserMapping {
	this := EngineUserMapping{}
	return &this
}

// GetEngineId returns the EngineId field value
func (o *EngineUserMapping) GetEngineId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.EngineId
}

// GetEngineIdOk returns a tuple with the EngineId field value
// and a boolean to check if the value has been set.
func (o *EngineUserMapping) GetEngineIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.EngineId, true
}

// SetEngineId sets field value
func (o *EngineUserMapping) SetEngineId(v int64) {
	o.EngineId = v
}

// GetEngineUserId returns the EngineUserId field value
func (o *EngineUserMapping) GetEngineUserId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.EngineUserId
}

// GetEngineUserIdOk returns a tuple with the EngineUserId field value
// and a boolean to check if the value has been set.
func (o *EngineUserMapping) GetEngineUserIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.EngineUserId, true
}

// SetEngineUserId sets field value
func (o *EngineUserMapping) SetEngineUserId(v int64) {
	o.EngineUserId = v
}

func (o EngineUserMapping) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["engine_id"] = o.EngineId
	}
	if true {
		toSerialize["engine_user_id"] = o.EngineUserId
	}
	return json.Marshal(toSerialize)
}

type NullableEngineUserMapping struct {
	value *EngineUserMapping
	isSet bool
}

func (v NullableEngineUserMapping) Get() *EngineUserMapping {
	return v.value
}

func (v *NullableEngineUserMapping) Set(val *EngineUserMapping) {
	v.value = val
	v.isSet = true
}

func (v NullableEngineUserMapping) IsSet() bool {
	return v.isSet
}

func (v *NullableEngineUserMapping) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEngineUserMapping(val *EngineUserMapping) *NullableEngineUserMapping {
	return &NullableEngineUserMapping{value: val, isSet: true}
}

func (v NullableEngineUserMapping) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEngineUserMapping) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


